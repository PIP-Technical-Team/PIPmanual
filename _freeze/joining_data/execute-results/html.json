{
  "hash": "751c6eda1408876ec1d1f463213c1b1d",
  "result": {
    "markdown": "# Joining Data\n\nSince the PIP project is comprised of several databases at very different domain levels, this chapter provides all the guidelines to join data frames correctly. The first thing to understand is that the reporting measures in PIP (e.g. poverty and inequality) are uniquely identified by four variables: *Country*, *year*, *domain*, and *welfare type*.\n\n-   *Country* refers to independent economies that conduct independent household\n    surveys. For instance, China and Taiwan are treated as **two different\n    economies** by the World Bank, and hence by PIP, even though under some\n    criteria some people think that Taiwan is part of China.\n\n-   *Year* refers to reporting year rather than the actual calendar years over\n    which the survey was conducted. Some household surveys like India 2011/2012\n    are conducted over the of two calendar year, but the welfare aggregate is\n    deflated to the reporting year, 2011.\n\n-   *Domain* refers to the smallest geographical disaggregation for which it is\n    possible to deflate and line up to PPP values the welfare aggregate of a\n    household survey. The criteria to determine the reporting domain of a\n    household survey is still under consideration, but ideally it such for which\n    there is CPI, PPP, and population auxiliary data, as well as a household\n    survey representative at that level. There are some exceptions to this\n    criterion like China or the Philippines, but this cases explained in\n    detailed in Section \\@ref(special-data-cases). As of today\n    (August 24, 2023), most country/years are reported at\n    the national domain and few are reported at the urban/rural domain. However,\n    the PIP technical infrastructure has been designed to incorporate other\n    domain levels if, at some point in time, it is the case.\n\n-   Finally, the *welfare type* specifies whether the welfare aggregate is based\n    on income or in consumption. For the latter case, though some households\n    surveys capture expenditure instead, they are still considered\n    consumption-based surveys.\n\nThe challenge of joining different data frames in PIP is that these four variables that uniquely identify the reporting measures [**are not**]{style=\"color:red\"} available on any of the PIP data files---with the exception of the cache files that we discuss below. This challenge is easily addressed by having a clear understanding of the Price FrameWork (pfw) data frame. This file does not only contain valuable metadata, but it could also be considered as the anchor among all PIP data.\n\n## The Price FrameWork (pfw) data {#pfw-join}\n\nAs always, this file can be loaded by typing,\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(data.table)\n#pfw <- pipload::pip_load_aux(\"pfw\")\n#joyn::is_id(pfw, by = c(\"country_code\", \"surveyid_year\", \"survey_acronym\"))\n```\n:::\n\n\nFirst of all, notice that `pfw` is uniquely identified by country code, survey\nyear, and survey acronym. The reason for this is that pfw aims at providing a\nlink between every single household survey and all the other auxiliary data.\nSince welfare data is stored following the naming convention of the\n[International Household Survey Network (IHSN)](http://ihsn.org/), data is\nstored according to country, survey year, acronym of the survey, and vintage\ncontrol of master and alternative versions. The vintage control of the master\nand alternative version of the data is not relevant for joining data because PIP\nuses, by default, the most recent version.\n\nKeep in mind that PIP estimates are reported at the country, year, domain, and\nwelfare type level, but the last two of these are not found either in the survey\nID nor as unique identifiers of the pfw. To solve this problem, the pfw data\nmakes use of the variables `welfare_type,` `aaa_domain`, and `aaa_domain_var`.\n\nAs the name suggests, `welfare_type` indicates the **main** welfare aggregate\ntype (i.e, income or consumption ) of the variable `welfare` in the GMD datasets\nthat correspond to the survey ID formed by concatenating variables\n`country_code`, `surveyid_year`, and `survey_acronym`. For example, the\n`welfare_type` of the `welfare` variable in the datasets of\n***COL_2018_GEIH**\\_V01_M\\_V03_A\\_GMD* is income.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# pfw[ country_code    == \"COL\"\n#     & surveyid_year  == 2018\n#     & survey_acronym == \"GEIH\", # Not necessary since it is the only one\n#     unique(welfare_type)]\n```\n:::\n\n\nThe prefix `aaa` in variables `aaa_domain` and `aaa_domain_var` refers to the\nidentification code of any of the auxiliary data. Thus, you will find a\n`gdp_domain`, `cpi_domain`, `ppp_domain` and several others. All `aaa_domain`\nvariables contain the *lower* level of geographical disaggregation of the\ncorresponding `aaa` auxiliary data. There are only three possible levels of\ndisaagregation,\n\n\n::: {.cell}\n\n:::\n\n\nAs of now, no survey or auxiliary data is broken down at level 3 (i.e.,\nsubnational), but it is important to know that the PIP internal code takes that\npossibility into account for future cases.\n\nDepending on the country, the domain level of each auxiliary data might be\ndifferent. In Indonesia, for instance, the CPI domain is national, whereas the\nPPP domain is \"urban/rural.\"\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# pfw[ country_code == \"IDN\" & surveyid_year == 2018, \n#     .(cpi = unique(cpi_domain), \n#       ppp = unique(ppp_domain))]\n```\n:::\n\n\nFinally, [and this is really important]{style=\"color:red\"}, variables\n`aaa_domain_var` contains the name of variable in the GMD dataset that uniquely\nidentify the household survey *in the corresponding `aaa`* *auxiliary data*. In\nother words, `aaa_domain_var` contains *the name* of the variable in GMD that\nmust be used as *key* *to join* GMD to `aaa`. You may ask, does the name of the\nvariable in the `aaa` auxiliary data have the same variable name in the GMD data\nspecified in `aaa_domain_var`? No, it does not. Since the domain level to\nidentify observations in the `aaa` auxiliary data is unique, there is only one\nvariable in auxiliary data used to merge any welfare data, `aaa_data_level`.\nSince all this process is a little cumbersome, the\n{[pipdp](https://github.com/PIP-Technical-Team/pipdp)} Stata package, during the\nprocess of cleaning GMD databases to PIP databases, creates as many\n`aaa_data_level` variables as needed in order to make the join of welfare data\nand auxiliary data simpler. You can see the lines of code that create these\nvariables in [this\nsection](https://github.com/PIP-Technical-Team/pipdp/blob/9c4e32636dd1c71954816f8a7c8ad743349959a6/pipdp_md_clean.ado#L225-L294)\nof the file \"pipdp_md_clean.ado.\"[^joining_data-1]\n\n[^joining_data-1]: You can find more information about the conversion from GMD\n    to PIP databases in Section \\@ref(welfare-data)\n\n### Joining data example\n\nLet's see the case of Indonesia above. The pfw says that the CPI domain is\n\"national\" and the PPP domain is \"urban/rural.\" That means that the welfare data\njoin to each of these auxiliary data with two different variables,\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# domains <- \n#   pfw[ country_code == \"IDN\" & surveyid_year == 2018, \n#      .(cpi = unique(cpi_domain_var), \n#        ppp = unique(ppp_domain_var))][]\n```\n:::\n\n\nThis says that the name of the variable in the welfare data to join PPP data is\ncalled `uban`, but there is not seem to be a variable name in GMD to join the\nCPI data. When the name of the variable is missing, it indicates that the\nwelfare data is not split by any variable to merge CPI data. That is, it is at\nthe national level.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# ccode  <- \"CHN\"\n# cpi <- pipload::pip_load_aux(\"cpi\")\n# ppp <- pipload::pip_load_aux(\"ppp\")\n# \n# CHN <-  pipload::pip_load_data(country = ccode, \n#                               year    = 2015)\n# \n# dt <- joyn::merge(CHN, cpi,\n#                   by = c(\"country_code\", \"survey_year\",\n#                          \"survey_acronym\", \"cpi_data_level\"),\n#                   match_type = \"m:1\", \n#                   keep = \"left\")\n```\n:::\n\n\n## Special data cases\n\n[NOTE: Andres. Add this section]{style=\"color:red\"}\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}