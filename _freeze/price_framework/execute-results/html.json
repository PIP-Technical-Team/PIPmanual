{
  "hash": "52fdafdf9c404576f4633e27dfd14747",
  "result": {
    "markdown": "---\neditor_options: \n  markdown: \n    wrap: 72\n---\n\n\n\n# Price FrameWork (pfw) data frame {#pfw-chapter}\n\nThe price framework data frame (pfw) is the most important source of\ntechnical metadata of the PIP project, which makes pertinent the have of\na separate chapter for it. The general explanation of the structure of\nthe pfw can be found in Section \\@ref(pfw-join). This chapter focuses\nmore on the use of each of the variables. Yet, it is worth repeating a\nfew things already mentioned in Section \\@ref(pfw-join).\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# pfw <- pipload::pip_load_aux(\"pfw\")\n```\n:::\n\n\n## Variables\n\nThe table provides a short description of each variable of the Price\nFrameWork data frame. We provide additional information for variable.\n\n\n::: {.cell}\n\n:::\n\n\n## Additional explanation\n\n### ID vars {.unnumbered}\n\nVariables of identification are `wb_region_code`, `pcn_region_code`,\n`country_code`, `ctryname`, `year`, `surveyid_year`, `survey_acronym`.\n\nThe main difference between `wb_region_code` and `pcn_region_code` is\nthat the former only include geographical regions internally used by the\nworld bank, whereas the latter has an additional category, \"OHI,\" for\nOther High Income countries.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# janitor::tabyl(pfw, wb_region_code, pcn_region_code)\n```\n:::\n\n\nFor most of the data points, there should be no difference in between\n`year` and `surveyid_year`. In some extreme cases (not available at the\nmoment), `year` could be different due to the reporting criteria from\nthe NSO. For our purpose, we use `rep_year` as the reporting year in our\nsystem for integer ones, and `ref_year` for decimal reporting purpose\n\n### `altname` {.unnumbered}\n\nAlternative survey name for some surveys.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# head(pfw[altname != \"\", c(\"altname\", \"survey_acronym\")])\n```\n:::\n\n\n### `survey_coverage` {.unnumbered}\n\nThis variable represent the househol survey coverage. This is different\nfrom the disaggregation data level.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# janitor::tabyl(pfw, survey_coverage)\n```\n:::\n\n\n### `welfare_type` {.unnumbered}\n\nThis variable contains the welfare type of the main welfare aggregate\nvariable in a survey in case it has more than one. The welfare type of\nalternative welfare aggregates is found in variable `oth_welfare1_type`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# janitor::tabyl(pfw, welfare_type)\n```\n:::\n\n\n### `use_imputed` {.unnumbered}\n\nWhether the welfare aggregate has been imputed. There are just few\ncountries with this kind of data.\n\n<!-- ```{r} -->\n<!-- # pfw[use_imputed == 1, unique(country_code)] -->\n<!-- ``` -->\n\n### `use_microdata` {.unnumbered}\n\nWhether the welfare aggregate *vector* used in PIP is directly extracted\nfrom microdata without any sort of aggregation. Mos of the countries\nhave this kind of data. Below you can see those that do not.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# pfw[use_microdata != 1, unique(country_code)]\n```\n:::\n\n\n### `use_bin` {.unnumbered}\n\nWhether the welfare aggregate was aggregated to 400 bins from microdata\nbefore being incorporated to the PIP repository. This is the case of\nhoushold surveys only available in the Luxembourg Data Center\n([LIS](https://www.lisdatacenter.org/)). Countries with bin data is\nconsidered micro data for technical purposes.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# pfw[use_bin == 1, unique(country_code)]\n```\n:::\n\n\n### `use_groupdata` {.unnumbered}\n\nWhether welfare aggregate comes from grouped data. Information about\nthis type of data is available in [@dattComputationalToolsPoverty1998;\n@krauseCorrigendumEllipticalLorenz2013;\n@villasenorEllipticalLorenzCurves1989]. The following countries have\nthis kind of data.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# pfw[use_groupdata == 1, unique(country_code)]\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}